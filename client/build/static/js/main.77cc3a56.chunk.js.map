{"version":3,"sources":["logo.svg","views/Main.js","views/Details.js","components/Input.js","components/Form.js","views/Create.js","views/Update.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","props","useState","pets","setPets","useEffect","Axios","get","then","res","data","className","to","scope","map","p","idx","key","_id","name","type","onClick","delete","navigate","petId","filter","pet","Details","id","setPet","isLiked","setIsLiked","catch","err","count","likes","description","skill_one","skill_two","skill_three","put","disabled","Input","label","value","error","handleChange","required","style","color","styles","display","onChange","e","Form","handleSubmit","form","errors","onSubmit","message","Create","newPet","setNewPet","setErrors","preventDefault","target","post","response","Update","editPet","setEditPet","App","from","no","throw","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.77cc3a56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\n\r\nconst Main = (props) => {\r\n    const [pets, setPets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:8000/api/pets')\r\n            .then(res => {\r\n                setPets(res.data)\r\n            })\r\n    }, []);\r\n\r\n    const removeFromDom = petId => {\r\n        setPets(pets.filter(pet => pet._id !== petId))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>These pets are looking for a home!</h3>\r\n            <hr/>\r\n            <Link className=\"btn btn-success\" to=\"/pets/new\">Add a pet to the shelter</Link>\r\n            <hr/>\r\n            <table className=\"mx-auto col-4 table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        pets.map((p, idx) => {\r\n                            return(\r\n                                <tr>\r\n                                    <td key={idx}><Link to={`/pets/${p._id}`}>{p.name}</Link></td>\r\n                                    <td>{p.type}</td>\r\n                                    <td>\r\n                                        <Link to={`/pets/${p._id}/edit`} className=\"btn btn-success\">Edit</Link>\r\n                                        <button className=\"btn btn-danger\" onClick={() => \r\n                                        Axios.delete(`http://localhost:8000/api/pet/${p._id}`)\r\n                                            .then(res => {\r\n                                                navigate('/');\r\n                                            })\r\n                                            .then(res => removeFromDom(p._id))\r\n                                    }>DELETE</button>\r\n                                    </td>\r\n                                </tr>\r\n                                \r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\n\r\nconst Details = ({id}) => {\r\n    const [pet, setPet] = useState({});\r\n\r\n    const [isLiked, setIsLiked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        Axios.get(`http://localhost:8000/api/pet/${id}`)\r\n        .then(res => setPet(res.data))\r\n        .catch(err=>navigate('/pets'))\r\n    }, [isLiked])\r\n\r\n    const removePet = () => {\r\n        Axios.delete(`http://localhost:8000/api/pet/${id}`)\r\n            .then(res => {\r\n                navigate('/pets')\r\n            })\r\n    }\r\n\r\n    var count = pet.likes +1;\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Link className=\"btn btn-primary\" to=\"/pets\">Go Home</Link>\r\n            <hr/>\r\n            <h1>Details about {pet.name}</h1>\r\n            <br/>\r\n            <h2>TYPE: {pet.type}</h2>\r\n            <br/>\r\n            <h3>DESCRIPTION: {pet.description}</h3>\r\n            <br/>\r\n            {\r\n                !pet.skill_one\r\n                    ?\"\"\r\n                    :<h4>SKILLS:</h4>\r\n            }\r\n            \r\n\r\n            <p>{pet.skill_one}</p>\r\n            <p>{pet.skill_two}</p>\r\n            <p>{pet.skill_three}</p>\r\n\r\n            <br/>\r\n            <h5>Number of Likes: {pet.likes}</h5>\r\n            <br/>\r\n            {\r\n                count +1> pet.likes\r\n\r\n                    ? <button id=\"like\" className=\"btn btn-primary\" onClick={()=>{\r\n                            pet.likes += 1;\r\n                            Axios.put(`http://localhost:8000/api/pet/${id}`, pet)\r\n                                .then(res=>{setIsLiked(true)})\r\n                                \r\n                        }}>LIKE THEM</button>\r\n                    \r\n                    : <button className=\"btn btn-primary\" disabled>Liked</button>\r\n            }\r\n            <br></br>\r\n            <br></br>\r\n            <Link className=\"btn btn-success\" to={`/pets/${id}/edit`}>EDIT</Link>\r\n            <br/>\r\n            <br/>\r\n            <button className=\"btn btn-danger\" onClick={removePet}>ADOPT</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\n\r\nconst Input = ({type, name, label, value, error, handleChange, required}) => {\r\n    const style ={\r\n        color: \"red\"\r\n    }\r\n\r\n    const styles = {\r\n        display: \"inline-block\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <span style={style}>{error ? error : \"\"}</span>\r\n        <span style={style}>\r\n            {\r\n                required === \"true\"\r\n                    ? value<3\r\n                        ?<p>{label} must be 3 charcters long</p>\r\n                        :\"\"\r\n                    :  \"\"\r\n            }\r\n        </span>\r\n        <div className=\"form-group row \">\r\n            <label style={styles} className=\"col-5 col-form-label text-right\">\r\n            {\r\n                required === \"true\"\r\n                    ? <p style={styles}>*</p>\r\n                    :\"\"\r\n            }\r\n            {label}: \r\n            </label>\r\n            <div className=\"col-6\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type={type}\r\n                    value={value}\r\n                    name={name}\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\nimport Input from './Input';\r\n\r\nconst Form = ({handleChange, handleSubmit, form, errors}) => {\r\n\r\n    return(\r\n        <form className=\"col-8 mx-auto\" onSubmit={(e) => handleSubmit(e)}>\r\n            <i>* Required</i>\r\n            <br/><br/>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                handleChange={handleChange}\r\n                value={form.name}\r\n                error={errors.name != null ? errors.name.message : \"\"}\r\n                required = \"true\"\r\n            />\r\n            <Input\r\n                type=\"text\"\r\n                name=\"type\"\r\n                label=\"Tpye of Animal\"\r\n                handleChange={handleChange}\r\n                value={form.type}\r\n                error={errors.type != null ? errors.type.message : \"\"}\r\n                required = \"true\"\r\n            />\r\n            <Input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                handleChange={handleChange}\r\n                value={form.description}\r\n                error={errors.description != null ? errors.description.message : \"\"}\r\n                required = \"true\"\r\n            />\r\n            <Input\r\n                type=\"text\"\r\n                name=\"skill_one\"\r\n                label=\"Skill One\"\r\n                handleChange={handleChange}\r\n                value={form.skill_one}\r\n                error={errors.skill_one != null ? errors.skill_one.message : \"\"}\r\n                required = \"false\"\r\n            />\r\n            <Input\r\n                type=\"text\"\r\n                name=\"skill_two\"\r\n                label=\"Skill two\"\r\n                handleChange={handleChange}\r\n                value={form.skill_two}\r\n                error={errors.skill_two != null ? errors.skill_two.message : \"\"}\r\n                required = \"false\"\r\n            /><Input\r\n                type=\"text\"\r\n                name=\"skill_three\"\r\n                label=\"Skill Three\"\r\n                handleChange={handleChange}\r\n                value={form.skill_three}\r\n                error={errors.skill_three != null ? errors.skill_three.message : \"\"}\r\n                required = \"false\"\r\n            />\r\n\r\n            <input className=\"btn btn-success\" type=\"submit\" value=\"Submit\" />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\nimport Form from '../components/Form';\r\n\r\nconst Create = (props) => {\r\n\r\n    const [newPet, setNewPet] = useState({\r\n        name:\"\",\r\n        type:\"\",\r\n        description:\"\",\r\n        skill_one:\"\",\r\n        skill_two:\"\",\r\n        skill_three:\"\",\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        name:\"\",\r\n        type:\"\",\r\n        description:\"\",\r\n        skill_one:\"\",\r\n        skill_two:\"\",\r\n        skill_three:\"\",\r\n    })\r\n\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setNewPet({\r\n            ...newPet,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:8000/api/pet', newPet)\r\n            .then(res => {\r\n                setNewPet({\r\n                    name:\"\",\r\n                    type:\"\",\r\n                    description:\"\",\r\n                    skill_one:\"\",\r\n                    skill_two:\"\",\r\n                    skill_three:\"\",\r\n                })\r\n                setErrors({\r\n                    name:\"\",\r\n                    type:\"\",\r\n                    description:\"\",\r\n                    skill_one:\"\",\r\n                    skill_two:\"\",\r\n                    skill_three:\"\",\r\n                })\r\n                // .setIsSubmitted(true)\r\n            })\r\n            .then(res => navigate('/pets'))\r\n            .catch(err => setErrors(err.response.data))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Link className=\"btn btn-primary\" to=\"/pets\">GO HOME</Link>\r\n            <hr/>\r\n            <h2>Add Pet:</h2>\r\n            <Form\r\n                form={newPet}\r\n                handleChange={handleChange}\r\n                handleSubmit={handleSubmit}\r\n                errors={errors}\r\n            />\r\n            <br/>\r\n            <Link className=\"btn btn-warning\" to=\"/pets\">Cancel</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;","import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\nimport Form from '../components/Form';\r\n\r\nconst Update = ({id}) => {\r\n    const [editPet, setEditPet] = useState({});\r\n    const [errors, setErrors] = useState({\r\n        name:\"\",\r\n        type:\"\",\r\n        description:\"\",\r\n        skill_one:\"\",\r\n        skill_two:\"\",\r\n        skill_three:\"\",\r\n    });\r\n\r\n    useEffect(()=> {\r\n        Axios.get(`http://localhost:8000/api/pet/${id}`)\r\n            .then(res => setEditPet(res.data))\r\n            .catch(err => navigate('/pets'))\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setEditPet({\r\n            ...editPet,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        Axios.put(`http://localhost:8000/api/pet/${id}`, editPet)\r\n            .then(res => navigate(`/pets/${id}`))\r\n            .catch(err => setErrors(err.response.data))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Link className=\"btn btn-primary\" to=\"/pets\">Go Home</Link>\r\n            <hr/>\r\n            <h2>Edit {editPet.name}</h2>\r\n            <Form\r\n                form={editPet}\r\n                handleChange={handleChange}\r\n                handleSubmit={handleSubmit}\r\n                errors={errors}\r\n            />\r\n            <br/>\r\n            <Link className=\"btn btn-warning\" to={`/pets/${id}`}>Cancel</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Main from \"./views/Main\";\nimport Details from'./views/Details';\nimport Create from './views/Create';\nimport Update from './views/Update';\nimport {Router, Redirect} from '@reach/router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <hr/>\n      <Router>\n        <Redirect from=\"/\" to=\"/pets\" no throw/>\n\n        <Main path='/pets'/>\n        <Create path='/pets/new'/>\n        <Details path='/pets/:id'/>\n        <Update path='/pets/:id/edit'/>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}